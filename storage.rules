rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check file size (max 10MB)
    function isValidFileSize() {
      return request.resource.size < 10 * 1024 * 1024;
    }

    // Helper function to check file type (images and PDFs only)
    function isValidFileType() {
      return request.resource.contentType.matches('image/.*') ||
             request.resource.contentType == 'application/pdf';
    }

    // Bills uploaded by users
    match /bills/{userId}/{fileName} {
      // Users can read their own bills
      allow read: if isAuthenticated() && request.auth.uid == userId;

      // Users can upload their own bills (with size and type validation)
      allow create: if isAuthenticated() &&
                      request.auth.uid == userId &&
                      isValidFileSize() &&
                      isValidFileType();

      // Users can delete their own bills
      allow delete: if isAuthenticated() && request.auth.uid == userId;

      // Prevent updates (delete and re-upload instead)
      allow update: if false;
    }

    // Group photos
    match /groups/{groupId}/{fileName} {
      // Anyone in a group can read group photos
      allow read: if isAuthenticated();

      // Only authenticated users can upload group photos
      allow create: if isAuthenticated() &&
                      isValidFileSize() &&
                      request.resource.contentType.matches('image/.*');

      // Allow updates and deletes for authenticated users
      allow update, delete: if isAuthenticated();
    }

    // User profile photos
    match /users/{userId}/profile/{fileName} {
      // Anyone can read profile photos
      allow read: if true;

      // Users can only upload their own profile photo
      allow create, update: if isAuthenticated() &&
                              request.auth.uid == userId &&
                              isValidFileSize() &&
                              request.resource.contentType.matches('image/.*');

      // Users can delete their own profile photo
      allow delete: if isAuthenticated() && request.auth.uid == userId;
    }
  }
}
